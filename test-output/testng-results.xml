<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5248" started-at="2020-03-21T09:35:51Z" finished-at="2020-03-21T09:35:56Z">
    <groups>
    </groups>
    <test name="createCustomerTest" duration-ms="4129" started-at="2020-03-21T09:35:51Z" finished-at="2020-03-21T09:35:55Z">
      <class name="com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-21T15:05:51Z" finished-at="2020-03-21T15:05:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="validateCreateCustomerWithValidSecretKey" duration-ms="2657" started-at="2020-03-21T15:05:51Z" data-provider="data" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=raghu@gmail.com, name=raghu, description=This is test raghu}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:54Z" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-21T15:05:54Z" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="validateCreateCustomerWithValidSecretKey" duration-ms="672" started-at="2020-03-21T15:05:54Z" data-provider="data" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=shivu@gmail.com, name=shivu, description=This is to test shivu}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:54Z" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="validateCreateCustomerWithInValidSecretKey" duration-ms="380" started-at="2020-03-21T15:05:54Z" data-provider="data" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=raghu1@gmail.com, name=raghu1, description=This is test raghu1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithInValidSecretKey -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:54Z" finished-at="2020-03-21T15:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="validateCreateCustomerWithInValidSecretKey" duration-ms="386" started-at="2020-03-21T15:05:55Z" data-provider="data" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=shivu1@gmail.com, name=shivu1, description=This is to test shivu1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithInValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:55Z" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithInValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:55Z" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:55Z" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithInValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@44a3ec6b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer -->
    </test> <!-- createCustomerTest -->
    <test name="deleteCustomerTest" duration-ms="775" started-at="2020-03-21T09:35:55Z" finished-at="2020-03-21T09:35:56Z">
      <class name="com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7]" name="setup" is-config="true" duration-ms="1352" started-at="2020-03-21T15:05:50Z" finished-at="2020-03-21T15:05:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="validateDeleteCustomerWithValidID(java.util.Hashtable)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7]" name="validateDeleteCustomerWithValidID" duration-ms="768" started-at="2020-03-21T15:05:55Z" data-provider="data" finished-at="2020-03-21T15:05:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=cus_GwxTYcwjSJUC82}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer.validateDeleteCustomerWithValidID(TC_02_Delete_Customer.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteCustomerWithValidID -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:55Z" finished-at="2020-03-21T15:05:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer.validateDeleteCustomerWithValidID(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T15:05:56Z" finished-at="2020-03-21T15:05:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteCustomerWithValidID status=FAILURE method=TC_02_Delete_Customer.validateDeleteCustomerWithValidID(java.util.Hashtable)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@2698dc7]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-03-21T15:05:56Z" finished-at="2020-03-21T15:05:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer -->
    </test> <!-- deleteCustomerTest -->
  </suite> <!-- Suite -->
</testng-results>
