<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="8630" started-at="2020-03-21T23:06:43 IST" finished-at="2020-03-21T23:06:52 IST">
    <groups>
    </groups>
    <test name="createCustomerTest" duration-ms="6705" started-at="2020-03-21T23:06:43 IST" finished-at="2020-03-21T23:06:50 IST">
      <class name="com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-21T23:06:43 IST" finished-at="2020-03-21T23:06:43 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="validateCreateCustomerWithValidSecretKey" duration-ms="5138" started-at="2020-03-21T23:06:43 IST" data-provider="data" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=raghu@gmail.com, name=raghu, description=This is test raghu}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-03-21T23:06:49 IST" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:49 IST" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="validateCreateCustomerWithValidSecretKey" duration-ms="710" started-at="2020-03-21T23:06:49 IST" data-provider="data" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=shivu@gmail.com, name=shivu, description=This is to test shivu}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithValidSecretKey -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:49 IST" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithValidSecretKey(java.util.Hashtable)[pri:1, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-03-21T23:06:49 IST" finished-at="2020-03-21T23:06:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="validateCreateCustomerWithInValidSecretKey" duration-ms="384" started-at="2020-03-21T23:06:49 IST" data-provider="data" finished-at="2020-03-21T23:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=raghu1@gmail.com, name=raghu1, description=This is test raghu1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithInValidSecretKey -->
        <test-method status="PASS" signature="validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="validateCreateCustomerWithInValidSecretKey" duration-ms="387" started-at="2020-03-21T23:06:50 IST" data-provider="data" finished-at="2020-03-21T23:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=shivu1@gmail.com, name=shivu1, description=This is to test shivu1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCreateCustomerWithInValidSecretKey -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:50 IST" finished-at="2020-03-21T23:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:50 IST" finished-at="2020-03-21T23:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithInValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:50 IST" finished-at="2020-03-21T23:06:50 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCreateCustomerWithInValidSecretKey status=SUCCESS method=TC_01_Create_Customer.validateCreateCustomerWithInValidSecretKey(java.util.Hashtable)[pri:2, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer@68ceda24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.practise.RestAssuredAPITestingFramework.TestCases.TC_01_Create_Customer -->
    </test> <!-- createCustomerTest -->
    <test name="deleteCustomerTest" duration-ms="1126" started-at="2020-03-21T23:06:51 IST" finished-at="2020-03-21T23:06:52 IST">
      <class name="com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03]" name="setup" is-config="true" duration-ms="2175" started-at="2020-03-21T23:06:41 IST" finished-at="2020-03-21T23:06:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2020-03-21T23:06:51 IST" finished-at="2020-03-21T23:06:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer.validateDeleteCustomerWithValidID(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateDeleteCustomerWithValidID(java.util.Hashtable)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03]" name="validateDeleteCustomerWithValidID" duration-ms="1111" started-at="2020-03-21T23:06:51 IST" data-provider="data" finished-at="2020-03-21T23:06:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[{id=cus_Gx5M8P0EvRsVD1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteCustomerWithValidID -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-03-21T23:06:52 IST" finished-at="2020-03-21T23:06:52 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteCustomerWithValidID status=SUCCESS method=TC_02_Delete_Customer.validateDeleteCustomerWithValidID(java.util.Hashtable)[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer@3d0f8e03]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-03-21T23:06:52 IST" finished-at="2020-03-21T23:06:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.practise.RestAssuredAPITestingFramework.TestCases.TC_02_Delete_Customer -->
    </test> <!-- deleteCustomerTest -->
  </suite> <!-- Suite -->
</testng-results>
